//This file consists of create/drop/populate statements for Oracle SQL. Comments are not implemented.
package functions;
/**
 *
 * @author Andrew Le
 */
public class QueryToOracle {
    OConnect OC = new OConnect();
    public QueryToOracle(){
        
    }
    
    public void findQuery(int n){
        switch (n){
            case 1 -> {
                OC.printQuery("SELECT dlocation_id, locationnum, streetname, postalcode, dropoffday, dropoffmonth, dropoffyear FROM cardropoff WHERE dropoffmonth <= 10 AND dropoffyear = 2023 ORDER BY dropoffmonth ASC");
            }
            case 2 -> {
                OC.printQuery("SELECT DISTINCT COMPANY FROM CUSINSURANCE ORDER BY COMPANY ASC");
            }
            case 3 -> {
                OC.printQuery("SELECT * FROM coverage WHERE accidentaldamageoption LIKE '%No%' AND exteriorinteriorcoverageoption LIKE '%No%' AND NOT coverage_id=6");
            }
            case 4 -> {
                OC.printQuery("SELECT CarBrand, CarModel, CarType, BrakeType, RANK() OVER (ORDER BY BrakeType DESC) as ranking FROM CarDescription ORDER BY BrakeType");
            }
            case 5 -> {
                OC.printQuery("SELECT DISTINCT PLocation_ID, LocationNum, StreetName, PostalCode FROM CarPickup GROUP BY PLocation_ID, LocationNum, StreetName, PostalCode ORDER BY LocationNum ASC");
            }
            case 6 -> {
                OC.printQuery("SELECT * FROM CusDetails ORDER BY Country ASC, Surname DESC");
            }
            case 7 -> {
                OC.printQuery("SELECT Type, SUM(Value) AS TotalValue FROM Promotion GROUP BY Type ORDER BY TotalValue DESC");
            }
            case 8 -> {
                OC.printQuery("SELECT Paymentconfirmation_id as PaymentCfm_ID, InterestRate, RentalPrice, MonthlyPrice, CardType, RANK() OVER (ORDER BY MonthlyPrice ASC) as rank FROM PaymentDetails");
            }
            case 9 -> {
                OC.printQuery("SELECT * FROM ACCESSORIES WHERE storageoption= 'Yes' AND (dollyoption = 'No' OR movingboxesoption = 'No')");
            }
            case 10 -> {
                OC.printQuery("SELECT customer_num as cust_num, paymentconfirmation_id as paymentCfm_Id, insurance_num, user_id, phonenum, email FROM Customer WHERE email LIKE '%@gmail.com%'");
            }
            case 11 -> {
                OC.printQuery("SELECT Customer_num, accessory_id, dlocation_id, plocation_id, CASE WHEN dlocation_id > 4321 THEN 'The drop off location is greater than 4000' WHEN dlocation_id = 4321 THEN 'The drop off location is 4000' ELSE 'The quantity is under 4321' END AS dlocation_idText FROM Reservation");
            }
            case 12 -> {
                OC.printQuery("SELECT service_id,  moversoption AS mover, additionalstorage AS storageoption FROM services WHERE NOT additionalstorage = 'No'");
            }
            case 13 -> {
                OC.printQuery("SELECT purchasedetails.reservation_num as resv#, purchasedetails.customer_num as cust#, customer.user_id, cusdetails.honorific, cusdetails.first, cusdetails.surname, reservation.registration_num, cardescription.licenseplate, cardescription.totalmileage, cardescription.enginesize FROM PURCHASEDETAILS INNER JOIN RESERVATION ON purchasedetails.reservation_num = reservation.reservation_num INNER JOIN CUSTOMER ON purchasedetails.customer_num = customer.customer_num INNER JOIN CUSDETAILS ON customer.user_id = cusdetails.user_id INNER JOIN CARDESCRIPTION ON reservation.registration_num = cardescription.registration_num WHERE (cardescription.totalmileage >= 50000 AND cardescription.enginesize = '2.4L') ORDER BY purchasedetails.customer_num, customer.user_id");
            }
            case 14 -> {
                OC.printQuery("SELECT purchasedetails.reservation_num, customer.insurance_num, cusdetails.first, cusdetails.surname, reservation.registration_num, cardescription.carbrand, cardescription.carmodel, cardescription.gaselectric, cardescription.braketype, cardescription.transmissiontype, customer.paymentconfirmation_id, paymentdetails.termlength, paymentdetails.rentalprice, reservation.promotion_id, promotion.value, purchasedetails.paymenttype, purchasedetails.total, purchasedetails.tax FROM PURCHASEDETAILS INNER JOIN RESERVATION ON purchasedetails.reservation_num = reservation.reservation_num INNER JOIN CUSTOMER ON reservation.customer_num = customer.customer_num INNER JOIN CUSINSURANCE ON customer.insurance_num = cusinsurance.insurance_num INNER JOIN CARDESCRIPTION ON reservation.registration_num = cardescription.registration_num INNER JOIN PAYMENTDETAILS ON customer.paymentconfirmation_id = paymentdetails.paymentconfirmation_id INNER JOIN PROMOTION ON reservation.promotion_id = promotion.promotion_id INNER JOIN CUSDETAILS ON customer.user_id = cusdetails.user_id WHERE (cardescription.gaselectric = 'Gas' AND cardescription.braketype = 'All-Wheel' AND cardescription.transmissiontype = 'Auto' AND paymentdetails.rentalprice >= 200) GROUP BY purchasedetails.reservation_num, customer.insurance_num, cusdetails.first, cusdetails.surname, reservation.registration_num, cardescription.carbrand, cardescription.carmodel, cardescription.gaselectric, cardescription.braketype, cardescription.transmissiontype, customer.paymentconfirmation_id, paymentdetails.termlength, paymentdetails.rentalprice, reservation.promotion_id, promotion.value, purchasedetails.paymenttype, purchasedetails.total, purchasedetails.tax ORDER BY reservation.registration_num, customer.paymentconfirmation_id, purchasedetails.total");
            }
            case 15 -> {
                OC.printQuery("SELECT purchasedetails.reservation_num, customer.user_id, cusdetails.first, customer.phonenum, reservation.registration_num, cardescription.carbrand, cardescription.carmodel, cardescription.numseats, cardescription.fueltype, reservation.dlocation_id, reservation.plocation_id, paymentdetails.leasefinanceorrent, customer.paymentconfirmation_id FROM PURCHASEDETAILS INNER JOIN RESERVATION ON purchasedetails.reservation_num = reservation.reservation_num INNER JOIN CUSTOMER ON reservation.customer_num = customer.customer_num INNER JOIN PAYMENTDETAILS ON customer.paymentconfirmation_id = paymentdetails.paymentconfirmation_id INNER JOIN CUSDETAILS ON customer.user_id = cusdetails.user_id INNER JOIN CARDESCRIPTION ON reservation.registration_num = cardescription.registration_num INNER JOIN CARDROPOFF ON reservation.dlocation_id = cardropoff.dlocation_id INNER JOIN CARPICKUP ON reservation.plocation_id = carpickup.plocation_id WHERE (cardescription.numseats >= 4 AND cardescription.fueltype = '87 Octane') GROUP BY purchasedetails.reservation_num, customer.user_id, cusdetails.first, customer.phonenum, reservation.registration_num, cardescription.carbrand, cardescription.carmodel, cardescription.numseats, cardescription.fueltype, reservation.dlocation_id, reservation.plocation_id, paymentdetails.leasefinanceorrent, customer.paymentconfirmation_id ORDER BY customer.user_id, reservation.registration_num, customer.paymentconfirmation_id");
            }
            case 16 -> {
                OC.printQuery("SELECT paymentconfirmation_id, monthlyprice FROM Paymentdetails WHERE monthlyprice > (SELECT AVG(monthlyprice) FROM Paymentdetails)");
            }
            case 17 -> {
                OC.printQuery("SELECT paymentconfirmation_id, cardtype, rentalprice, termlength, SUM(rentalprice) OVER ( PARTITION BY cardtype ORDER BY rentalprice ASC) as calcsum FROM paymentdetails");
            }
            case 18 -> {
                OC.printQuery("SELECT cardtype, ROUND(AVG(rentalprice),2) FROM paymentdetails GROUP BY cardtype HAVING AVG(rentalprice) > 100");
            }
            case 19 -> {
                OC.printQuery("SELECT paymentconfirmation_id, monthlyprice, cardcvc FROM paymentdetails WHERE monthlyprice > (SELECT AVG(monthlyprice) FROM paymentdetails)");
            }
            case 20 -> {
                OC.printQuery("SELECT COUNT(DISTINCT birthyear) AS unique_birthyear FROM cusdetails WHERE birthyear BETWEEN 1960 AND 2004");
            }
            case 21 -> {
                OC.printQuery("SELECT COUNT(DISTINCT CASE WHEN monthlyprice BETWEEN 1 and 200 THEN paymentconfirmation_id ELSE NULL END) AS low_spenders, COUNT(DISTINCT CASE WHEN monthlyprice BETWEEN 201 and 300 THEN paymentconfirmation_id ELSE NULL END) AS mid_spenders, COUNT(DISTINCT CASE WHEN monthlyprice > 300 THEN paymentconfirmation_id ELSE NULL END) AS high_spenders FROM paymentdetails");
            }
            default -> {
            }
                
            
        }
    }
    
    public void findView(int n){
        switch (n){
            case 1 -> {
                OC.printQuery("SELECT * FROM annual_statement");
            }
            case 2 -> {
                OC.printQuery("SELECT * FROM cust_dates_pickup_dropoff");
            }
            case 3 -> {
                OC.printQuery("SELECT * FROM rented_cars");
            }
            case 4 -> {
                OC.printQuery("SELECT * FROM reservations2023");
            }
            default -> {
            }
                
        }
    }
    
    public Object[] sendStringCT(){
        String[] createTableStatements = {
        "  CREATE TABLE \"AVLE\".\"ACCESSORIES\" \n" +
"   (	\"ACCESSORY_ID\" NUMBER, \n" +
"	\"STORAGEOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"DOLLYOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"MEDIACABLES\" VARCHAR2(100 CHAR), \n" +
"	\"MATSOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"MOVINGBOXESOPTION\" VARCHAR2(100 CHAR)\n" +
"   )",
        "  CREATE TABLE \"AVLE\".\"CARDESCRIPTION\" \n" +
"   (	\"REGISTRATION_NUM\" NUMBER, \n" +
"	\"CARTYPE\" VARCHAR2(100 CHAR), \n" +
"	\"CARCOLOUR\" VARCHAR2(100 CHAR), \n" +
"	\"CARBRAND\" VARCHAR2(100 CHAR), \n" +
"	\"CARMODEL\" VARCHAR2(100 CHAR), \n" +
"	\"LICENSEPLATE\" VARCHAR2(100 CHAR), \n" +
"	\"NUMSEATS\" NUMBER, \n" +
"	\"GASELECTRIC\" VARCHAR2(100 CHAR), \n" +
"	\"FUELTYPE\" VARCHAR2(100 CHAR), \n" +
"	\"TANKSIZE\" NUMBER, \n" +
"	\"FUELECONOMY\" VARCHAR2(100 CHAR), \n" +
"	\"TOTALMILEAGE\" NUMBER, \n" +
"	\"ENGINESIZE\" VARCHAR2(100 CHAR), \n" +
"	\"BRAKETYPE\" VARCHAR2(100 CHAR), \n" +
"	\"TRANSMISSIONTYPE\" VARCHAR2(100 CHAR)\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"CARDROPOFF\" \n" +
"   (	\"DLOCATION_ID\" NUMBER, \n" +
"	\"LOCATIONNUM\" NUMBER, \n" +
"	\"STREETNAME\" VARCHAR2(100 CHAR), \n" +
"	\"POSTALCODE\" VARCHAR2(100 CHAR), \n" +
"	\"DROPOFFDAY\" NUMBER, \n" +
"	\"DROPOFFMONTH\" NUMBER, \n" +
"	\"DROPOFFYEAR\" NUMBER\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"CARPICKUP\" \n" +
"   (	\"PLOCATION_ID\" NUMBER, \n" +
"	\"LOCATIONNUM\" NUMBER, \n" +
"	\"STREETNAME\" VARCHAR2(100 CHAR), \n" +
"	\"POSTALCODE\" VARCHAR2(100 CHAR), \n" +
"	\"PICKUPDAY\" NUMBER, \n" +
"	\"PICKUPMONTH\" NUMBER, \n" +
"	\"PICKUPYEAR\" NUMBER\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"COVERAGE\" \n" +
"   (	\"COVERAGE_ID\" NUMBER, \n" +
"	\"PARTSCOVERAGEOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"ACCIDENTALDAMAGEOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"EXTERIORINTERIORCOVERAGEOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"TEMPORARINSURANCEOPTION\" VARCHAR2(100 CHAR)\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"CUSDETAILS\" \n" +
"   (	\"USER_ID\" NUMBER, \n" +
"	\"HONORIFIC\" VARCHAR2(100 CHAR), \n" +
"	\"FIRST\" VARCHAR2(100 CHAR), \n" +
"	\"MIDDLE\" VARCHAR2(100 CHAR), \n" +
"	\"SURNAME\" VARCHAR2(100 CHAR), \n" +
"	\"HOUSENUM\" NUMBER, \n" +
"	\"STREETNAME\" VARCHAR2(100 CHAR), \n" +
"	\"PROVINCEORSTATE\" VARCHAR2(100 CHAR), \n" +
"	\"COUNTRY\" VARCHAR2(100 CHAR), \n" +
"	\"POSTALCODE\" VARCHAR2(100 CHAR), \n" +
"	\"BIRTHDAY\" NUMBER, \n" +
"	\"BIRTHMONTH\" NUMBER, \n" +
"	\"BIRTHYEAR\" NUMBER\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"CUSINSURANCE\" \n" +
"   (	\"INSURANCE_NUM\" NUMBER, \n" +
"	\"LICENSE\" VARCHAR2(100 CHAR), \n" +
"	\"COMPANY\" VARCHAR2(100 CHAR), \n" +
"	\"POLICYNUM\" NUMBER\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"CUSTOMER\" \n" +
"   (	\"CUSTOMER_NUM\" NUMBER, \n" +
"	\"PAYMENTCONFIRMATION_ID\" NUMBER, \n" +
"	\"INSURANCE_NUM\" NUMBER, \n" +
"	\"USER_ID\" NUMBER, \n" +
"	\"PHONENUM\" NUMBER, \n" +
"	\"EMAIL\" VARCHAR2(100 CHAR)\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"PAYMENTDETAILS\" \n" +
"   (	\"PAYMENTCONFIRMATION_ID\" NUMBER, \n" +
"	\"INTERESTRATE\" NUMBER, \n" +
"	\"TERMLENGTH\" VARCHAR2(100 CHAR), \n" +
"	\"MONTHLYPRICE\" NUMBER, \n" +
"	\"RENTALPRICE\" NUMBER, \n" +
"	\"LEASEFINANCEORRENT\" NUMBER, \n" +
"	\"CARDCVC\" NUMBER, \n" +
"	\"CARDEXPIRY\" VARCHAR2(100 CHAR), \n" +
"	\"CARDNUM\" NUMBER, \n" +
"	\"CARDTYPE\" VARCHAR2(100 CHAR)\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"PROMOTION\" \n" +
"   (	\"PROMOTION_ID\" NUMBER, \n" +
"	\"VALUE\" NUMBER, \n" +
"	\"TYPE\" VARCHAR2(100 CHAR), \n" +
"	\"CODENUM\" NUMBER\n" +
"   ) ",
        "  CREATE TABLE \"AVLE\".\"PURCHASEDETAILS\" \n" +
"   (	\"BILLING_NUM\" NUMBER, \n" +
"	\"RESERVATION_NUM\" NUMBER, \n" +
"	\"REGISTRATION_NUM\" NUMBER, \n" +
"	\"CUSTOMER_NUM\" NUMBER, \n" +
"	\"PAYMENTTYPE\" VARCHAR2(100 CHAR), \n" +
"	\"MARKETVALUE\" NUMBER, \n" +
"	\"TOTAL\" VARCHAR2(100 CHAR), \n" +
"	\"TAX\" VARCHAR2(100 CHAR)\n" +
"   ) ",
        "CREATE TABLE \"AVLE\".\"RESERVATION\" \n" +
"   (	\"RESERVATION_NUM\" NUMBER, \n" +
"	\"DLOCATION_ID\" NUMBER, \n" +
"	\"PLOCATION_ID\" NUMBER, \n" +
"	\"REGISTRATION_NUM\" NUMBER, \n" +
"	\"CUSTOMER_NUM\" NUMBER, \n" +
"	\"ACCESSORY_ID\" NUMBER, \n" +
"	\"COVERAGE_ID\" NUMBER, \n" +
"	\"SERVICE_ID\" NUMBER, \n" +
"	\"PROMOTION_ID\" NUMBER, \n" +
"	\"PICKUPTIME\" VARCHAR2(100 CHAR), \n" +
"	\"DROPOFFTIME\" VARCHAR2(100 CHAR)\n" +
"   ) ",
        "CREATE TABLE \"AVLE\".\"SERVICES\" \n" +
"   (	\"SERVICE_ID\" NUMBER, \n" +
"	\"MOVERSOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"ROADSIDEASSISTANCEOPTION\" VARCHAR2(100 CHAR), \n" +
"	\"ADDITIONALSTORAGE\" VARCHAR2(100 CHAR), \n" +
"	\"DRIVEROPTION\" VARCHAR2(100 CHAR)\n" +
"   ) "};

        return OC.createTables(createTableStatements);
    }
    public Object[] sendStringDT(){
        return OC.dropTables();
        
    }
    
    public Object[] sendStringPT(){
        String[] populateTableStatements = {
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (1,'Yes','No','Yes, USB-C','Yes, 5','No')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (2,'No','Yes','No','No','Yes, 5 Large')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (3,'Yes','No','No','Yes, 3','No')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (4,'No','Yes','Yes, USB','No','Yes, 4 Small')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (5,'Yes','No','Yes, Lightning and USB-C','Yes, 8','No')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (6,'No','Yes','No','No','Yes, 2 Large and 3 Medium')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (7,'Yes','No','No','Yes, 2','No')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (8,'No','Yes','No','No','Yes, 4 Medium and 10 Small')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (9,'Yes','No','Yes, Lightning','Yes, 1','No')",
    "Insert into AVLE.ACCESSORIES (ACCESSORY_ID,STORAGEOPTION,DOLLYOPTION,MEDIACABLES,MATSOPTION,MOVINGBOXESOPTION) values (10,'No','Yes','Yes, Lightning, USB-C, and USB','No','Yes, 6 Large, 3 Medium, and 15 Small')",
    
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (1,'No','No','Yes','Yes')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (2,'Yes','Yes','Yes','No')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (3,'Yes','No','No','Yes')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (4,'Yes','No','Yes','Yes')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (5,'No','No','No','Yes')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (6,'Yes','No','No','No')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (7,'No','Yes','No','No')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (8,'No','Yes','Yes','Yes')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (9,'Yes','No','Yes','No')",
    "Insert into AVLE.COVERAGE (COVERAGE_ID,PARTSCOVERAGEOPTION,ACCIDENTALDAMAGEOPTION,EXTERIORINTERIORCOVERAGEOPTION,TEMPORARINSURANCEOPTION) values (10,'Yes','Yes','No','No')",
    
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (321675,4.5,'36 months',250,200,1,123,'09/25',1234567890123456,'Visa')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (235167,3.9,'24 months',180,150,2,456,'07/24',2345678901234567,'Mastercard')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (943657,5,'48 months',300,250,1,789,'11/26',3456789012345678,'Visa')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (438123,4.2,'60 months',350,300,1,234,'05/27',4567890123456789,'American Express')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (354890,3.7,'12 months',100,80,3,567,'03/23',5678901234567890,'Visa')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (123963,4.8,'36 months',275,230,2,890,'08/25',6789012345678901,'Mastercard')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (879234,3.5,'48 months',320,270,3,321,'10/27',7890123456789012,'Visa')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (90954,4,'24 months',150,120,1,432,'12/24',8901234567890123,'Visa')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (543909,4.6,'60 months',375,320,2,464,'04/28',9012345678901234,'Mastercard')",
    "Insert into AVLE.PAYMENTDETAILS (PAYMENTCONFIRMATION_ID,INTERESTRATE,TERMLENGTH,MONTHLYPRICE,RENTALPRICE,LEASEFINANCEORRENT,CARDCVC,CARDEXPIRY,CARDNUM,CARDTYPE) values (105215,3.8,'12 months',110,85,3,756,'02/23',3456789012345678,'American Express')",
    
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (432162,654123,176258,1,'MASTERCARD',15000,'32392.34','496.34')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (645254,768254,876243,2,'VISA',12000,'12543.53','543.53')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (786542,432565,761276,3,'MASTERCARD',10000,'21352.64','762.32')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (646547,98843,943713,4,'DEBIT',5000,'10432.35','354.64')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (99542,132565,456534,5,'DEBIT',33000,'54921.34','853.26')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (135862,377643,461952,6,'CHEQUE',21000,'37423.53','389.76')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (139517,95433,349642,7,'DEBIT',29000,'40752.53','1043.54')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (98764,745143,766242,8,'VISA',19000,'19630.35','630.35')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (58201,876435,943812,9,'CHEQUE',11000,'24642.84','845.25')",
    "Insert into AVLE.PURCHASEDETAILS (BILLING_NUM,RESERVATION_NUM,REGISTRATION_NUM,CUSTOMER_NUM,PAYMENTTYPE,MARKETVALUE,TOTAL,TAX) values (897451,474552,47032,10,'CHEQUE',18000,'279652.53','962.86')",
    
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (654123,5431,4321,176258,1,1,1,1,1,'9:00','17:00')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (768254,1357,7635,876243,2,2,2,2,2,'10:30','16:45')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (432565,7243,4391,761276,3,3,3,3,1,'15:45','15:30')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (98843,4321,2578,943713,4,4,4,4,4,'14:00','14:45')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (132565,5491,8765,456534,5,5,5,5,5,'16:45','12:15')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (377643,3420,689,461952,6,6,6,6,6,'8:30','18:00')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (95433,6542,4123,349642,7,7,7,7,7,'13:15','11:30')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (745143,9238,9873,766242,8,8,8,8,8,'17:30','10:45')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (876435,124,5432,943812,9,9,9,9,9,'19:00','14:45')",
    "Insert into AVLE.RESERVATION (RESERVATION_NUM,DLOCATION_ID,PLOCATION_ID,REGISTRATION_NUM,CUSTOMER_NUM,ACCESSORY_ID,COVERAGE_ID,SERVICE_ID,PROMOTION_ID,PICKUPTIME,DROPOFFTIME) values (474552,2341,9999,47032,10,10,10,10,10,'12:45','15:00')",
    
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (1,'Mrs.','Linda','Mary','Troutman',4396,'Nelson Street','Ontario','Canada','P0S1E0',8,8,1997)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (2,'Mr.','Bertrand','Lou','Marseau',412,'Park Court','Alberta','Canada','T0E 2B0',3,5,1959)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (3,'Mrs.','Desire','Adele','Thibodeau',1197,'rue Levy','Quebec','Canada','H3C 5K4',7,12,1960)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (4,'Mr.','Joseph','Paul','Mayes',830,'Brand Road','Saskatchewan','Canada','S7K 1W8',30,3,1990)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (5,'Mr.','Ricky','Mark','Aguiar',324,'Robson Street','British Columbia','Canada','V6B 3K9',10,11,2000)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (6,'Mrs.','Laura','Jessie','Davis',625,'5th Avenue','Alberta','Canada','T0H 0E0',15,4,1978)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (7,'Mrs.','Phyllis','Marjorie','Allen',2114,'Eglinton  Avenue','Ontario','Canada','M4P 1A6',2,20,1959)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (8,'Dr.','Rachel','Courtney','Miller',2610,'Cecil Street','California','United States','CA 90017',1,1,1989)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (9,'Dr.','Beverly','Alison','Swift',968,'Mesa Drive','Nevada','United States','NV 89101',24,6,1985)",
    "Insert into AVLE.CUSDETAILS (USER_ID,HONORIFIC,FIRST,MIDDLE,SURNAME,HOUSENUM,STREETNAME,PROVINCEORSTATE,COUNTRY,POSTALCODE,BIRTHDAY,BIRTHMONTH,BIRTHYEAR) values (10,'Miss.','Coral','Ellie','Catalano',3346,'Werninger Street','Texas','United States','TX 77027',31,12,1991)",
    
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (1,10.99,'Discount',12345)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (2,5,'Coupon',67890)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (3,15.75,'Friends and Family',54321)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (4,8.99,'Friends and Family',98765)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (5,3.5,'Coupon',23456)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (6,20,'Sale',78901)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (7,12.49,'Discount',34567)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (8,6.25,'Friends and Family',87654)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (9,18.99,'Sale',43210)",
    "Insert into AVLE.PROMOTION (PROMOTION_ID,VALUE,TYPE,CODENUM) values (10,9.75,'Discount',65432)",
    
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (1,'K7856-90234-56218','Avira',812739405)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (2,'B4567-12345-78901','Avira',934578621)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (3,'M1234-56789-01234','Johnson',689742130)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (4,'R9876-54321-67890','Johnson',217894562)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (5,'L2468-13579-80246','Johnson',583920176)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (6,'G5432-98765-43210','CAA',125873490)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (7,'T8765-43210-98765','NexaCore',309856721)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (8,'F0123-45678-90123','CAA',764129835)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (9,'P2345-67890-12345','CAA',982376541)",
    "Insert into AVLE.CUSINSURANCE (INSURANCE_NUM,LICENSE,COMPANY,POLICYNUM) values (10,'X9876-54321-21098','NexaCore',451298763)",
    
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (1,321675,1,1,4163280531,'johndoe@example.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (2,235167,2,2,6475557890,'janedoe@gmail.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (3,943657,3,3,9051234567,'alice.smith@example.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (4,438123,4,4,5199876543,'robert.jones@gmail.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (5,354890,5,5,6138765432,'emily.brown@example.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (6,123963,6,6,4167890123,'michael.wilson@gmail.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (7,879234,7,7,9053456789,'sarah.davis@example.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (8,90954,8,8,6472345678,'david.miller@gmail.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (9,543909,9,9,5197890123,'laura.anderson@example.com')",
    "Insert into AVLE.CUSTOMER (CUSTOMER_NUM,PAYMENTCONFIRMATION_ID,INSURANCE_NUM,USER_ID,PHONENUM,EMAIL) values (10,105215,10,10,6134567890,'kevin.johnson@gmail.com')",
    
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (176258,'Sedan','Grey','Honda','Accord','K9Z3J7Y',5,'Gas','87 Octane',55,'15.2 km/L',45682,'2.0L','All-Wheel','Auto')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (876243,'Sedan','Black','Hyundai','Elantra','X5G6P2Q',4,'Gas','87 Octane',50,'18.7 km/L',78349,'1.6L','All-Wheel','Auto')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (761276,'SUV','Black','Toyota','Rav4','R8B4F1W',6,'Gas','89 Octane',50,'20.5 km/L',32156,'2.4L','Rear-Wheel','Auto')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (943713,'Sedan','White','Mercedes','C300','L2N9K6T',2,'Gas','91 Octane',60,'22.3 km/L',56890,'1.8L','Front-Wheel','Auto and Manual')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (456534,'Pickup','White','Ford','F150','H7D1V0X',5,'Electric','N/A',0,'14.8 km/L',91247,'3.1L','All-Wheel','Auto')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (461952,'Sedan','Red','Tesla','Model 3','M3T6R5A',4,'Electric','N/A',0,'19.6 km/L',69532,'2.4L','All-Wheel','Auto')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (349642,'Coupe','Yellow','Chevrolet','Corvette','W1P8Q9Z',2,'Gas','94 Octane',55,'23.1 km/L',38765,'2.0L','Front-Wheel','Manual')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (766242,'Coupe','Orange','Dodge','Charger','F4S2U7V',4,'Gas','90 Octane',65,'17.9 km/L',53210,'2.8L','Rear-Wheel','Manual')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (943812,'Convertible','Green','Mustang','GT','N6E0G3H',5,'Gas','92 Octane',55,'21.4 km/L',62418,'2.4L','Rear-Wheel','Auto')",
    "Insert into AVLE.CARDESCRIPTION (REGISTRATION_NUM,CARTYPE,CARCOLOUR,CARBRAND,CARMODEL,LICENSEPLATE,NUMSEATS,GASELECTRIC,FUELTYPE,TANKSIZE,FUELECONOMY,TOTALMILEAGE,ENGINESIZE,BRAKETYPE,TRANSMISSIONTYPE) values (47032,'SUV','Blue','Jeep','Wrangler','Y9J5K1L',6,'Gas','89 Octane',70,'16.3 km/L',84723,'3.6L','All-Wheel','Auto')",
    
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (5431,2356,'Willow Way','T8P 6L1',31,3,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (1357,8,'Spruce Place','R7N 2V3',11,1,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (7243,12,'Ash Street','N1W 8Q7',11,5,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (4321,901,'Redwood Road','S9A 5G6',18,4,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (5491,3,'Elm Street','H5J 2K8',12,5,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (3420,76,'Oak Avenue','M3N 1P6',30,9,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (6542,234,'Maple Street','L2R 4S9',15,7,2022)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (9238,34,'Pine Lane','G1T 3W2',6,7,2022)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (124,23,'Birch Drive','V4E 7X5',21,11,2023)",
    "Insert into AVLE.CARDROPOFF (DLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,DROPOFFDAY,DROPOFFMONTH,DROPOFFYEAR) values (2341,43,'Cedar Court','K6A 9H4',25,12,2023)",
    
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (4321,901,'Redwood Road','S9A 5G6',4,4,2029)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (7635,65,'Spruce Street','YZA 90123',28,10,2023)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (4391,92,'Cedar Avenue','PQR 67890',13,11,2023)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (2578,123,'Maplewood Avenue','V6E 1T7',15,10,2024)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (8765,345,'Spruce Circle','M5V 2K8',8,7,2024)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (689,56,'Cedar Lane','K1P 5M7',9,6,2025)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (4123,789,'Birch Street','T5J 0L8',27,8,2026)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (9873,567,'Oak Avenue','B3H 4R2',12,1,2023)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (5432,678,'Birchwood Crescent','V6E 1T7',14,3,2021)",
    "Insert into AVLE.CARPICKUP (PLOCATION_ID,LOCATIONNUM,STREETNAME,POSTALCODE,PICKUPDAY,PICKUPMONTH,PICKUPYEAR) values (9999,11,'Redwood Court','H3B 2Y3',23,9,2020)",
    
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (1,'Yes','No','Yes','Yes')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (2,'No','Yes','No','No')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (3,'Yes','Yes','Yes','No')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (4,'No','No','Yes','Yes')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (5,'Yes','No','No','No')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (6,'No','Yes','Yes','Yes')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (7,'Yes','No','Yes','No')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (8,'Yes','Yes','No','No')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (9,'No','No','No','Yes')",
    "Insert into AVLE.SERVICES (SERVICE_ID,MOVERSOPTION,ROADSIDEASSISTANCEOPTION,ADDITIONALSTORAGE,DRIVEROPTION) values (10,'Yes','No','No','Yes')",
    
    
        
        
        
        };
    
        
       return OC.populateTables(populateTableStatements);
    }
    
    
}
