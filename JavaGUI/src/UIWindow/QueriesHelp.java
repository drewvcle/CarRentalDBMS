package UIWindows;

/**
 *
 * @author andre
 */
public class QueriesHelp extends javax.swing.JFrame {


    public QueriesHelp(int QueriesXLoc, int QueriesYLoc) {
        initComponents();
        
        this.setLocation(QueriesXLoc - 100, QueriesYLoc - this.getHeight() - 10);
        //Stops user from opening multiple help pages.
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                Queries.isHelpOpen = false;
            }
        });


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Help: Queries");

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setText("Enter the number corresponding to the query:\n-----------------------------------------------------------\n1. Filters car crop off date between January to October of 2023 in ascending order by month.\n\n2. List company names in ascending order.\n\n3. Filters Coverage ID's with no accidental damage and exterior coverage option (exluding coverage ID #6.\n\n4. Ranks by brake type.\n\n5. Creates a list of unique pickup locations and total number of pickups that occured at that location.\n\n6. Displays customer details in ascending order of country & surnames in descending order.\n\n7. Calculates the total value of each promotion and displays the total values for each promotion in descending order.\n\n8. Ranks by monthly price.\n\n9. Displays storage option: yes, dollyoption: no, movingboxes: no.\n\n10. Shows emails corresponding from the @gmail domain.\n\n11. Tells when the drop off location is greater than, equal to, or less than 4321.\n\n12. Changes titles of columns and removes the no options from storage option.\n\n13. Selects specific reservations where the rented car has a total mileage greater than 50000km and an engine size of 2.4L.\n\n14. Selects specific customers where the car has a description 'Gas', 'All-Wheel', 'Auto', and a rental price greater or equal to 200.\n\n15. Selects specific reservations where the rented car has more than or equal to 4 seats, and is of fuel type '87 Octane'.\n\n16. Shows monthly price of all Payment ID's.\n\n17. Orders rental price by card types.\n\n18. Shows average rental prices greater than 100 by Card Types.\n\n19. Shows monthly prices that are greater than the average monthly price.\n\n20. Shows the number of unique birth years between 1960 and 2004.\n\n21. Counts the number of low, mid, and high spenders in DB.");
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jButton1)
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Exit button is pressed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
